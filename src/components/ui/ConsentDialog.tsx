import React, { useState } from 'react';
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from '@/components/ui/dialog';
import { Button } from '@/components/ui/button';
import { Checkbox } from '@/components/ui/checkbox';
import { Alert, AlertDescription } from '@/components/ui/alert';
import { AlertTriangle, Shield, FileText, Scale } from 'lucide-react';

interface ConsentDialogProps {
  isOpen: boolean;
  onClose: () => void;
  onConsent: () => void;
  featureName: string;
  isFrench?: boolean;
}

const ConsentDialog: React.FC<ConsentDialogProps> = ({
  isOpen,
  onClose,
  onConsent,
  featureName,
  isFrench = true
}) => {
  const [hasConsented, setHasConsented] = useState(false);

  const handleConsent = () => {
    if (hasConsented) {
      onConsent();
      setHasConsented(false); // Reset for next time
    }
  };

  const handleClose = () => {
    setHasConsented(false);
    onClose();
  };

  return (
    <Dialog open={isOpen} onOpenChange={handleClose}>
      <DialogContent className="max-w-2xl">
        <DialogHeader>
          <DialogTitle className="text-2xl font-bold text-red-700 flex items-center gap-3">
            <AlertTriangle className="w-8 h-8" />
            {isFrench ? 'Consentement requis' : 'Consent Required'}
          </DialogTitle>
          <DialogDescription className="text-lg text-gray-600">
            {isFrench 
              ? `Avant d'utiliser ${featureName}, veuillez lire et accepter les conditions suivantes :`
              : `Before using ${featureName}, please read and accept the following conditions:`
            }
          </DialogDescription>
        </DialogHeader>

        <div className="space-y-6">
          {/* Main Warning */}
          <Alert className="border-yellow-400 bg-yellow-50">
            <AlertTriangle className="h-5 w-5 text-yellow-600" />
            <AlertDescription className="text-yellow-800 font-medium">
              {isFrench 
                ? 'Je comprends que j\'utilise cette plateforme de planification financière comme un outil éducatif et informatif qui ne remplace en aucun cas une consultation avec un professionnel qualifié.'
                : 'I understand that I am using this financial planning platform as an educational and informational tool that in no way replaces consultation with a qualified professional.'
              }
            </AlertDescription>
          </Alert>

          {/* Responsibilities */}
          <div className="bg-gray-50 rounded-lg p-6">
            <h3 className="text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2">
              <Scale className="w-5 h-5" />
              {isFrench ? 'Il est de ma responsabilité de :' : 'It is my responsibility to:'}
            </h3>
            
            <div className="space-y-4">
              <div className="flex items-start gap-3">
                <Shield className="w-5 h-5 text-blue-600 mt-0.5 flex-shrink-0" />
                <p className="text-gray-700">
                  {isFrench 
                    ? 'Consulter un planificateur financier autorisé pour les décisions importantes'
                    : 'Consult an authorized financial planner for important decisions'
                  }
                </p>
              </div>
              
              <div className="flex items-start gap-3">
                <FileText className="w-5 h-5 text-green-600 mt-0.5 flex-shrink-0" />
                <p className="text-gray-700">
                  {isFrench 
                    ? 'Vérifier la validité fiscale de mes stratégies avec un comptable qualifié'
                    : 'Verify the tax validity of my strategies with a qualified accountant'
                  }
                </p>
              </div>
              
              <div className="flex items-start gap-3">
                <Scale className="w-5 h-5 text-purple-600 mt-0.5 flex-shrink-0" />
                <p className="text-gray-700">
                  {isFrench 
                    ? 'Obtenir des conseils juridiques pour la planification successorale'
                    : 'Obtain legal advice for estate planning'
                  }
                </p>
              </div>
            </div>
          </div>

          {/* Additional Warning */}
          <Alert className="border-red-400 bg-red-50">
            <AlertTriangle className="h-5 w-5 text-red-600" />
            <AlertDescription className="text-red-800">
              <strong>{isFrench ? 'Important :' : 'Important:'}</strong>{' '}
              {isFrench 
                ? 'Les résultats générés par cet outil sont basés sur des hypothèses et des projections qui peuvent ne pas refléter la réalité future. Ils ne constituent pas des conseils financiers personnalisés.'
                : 'The results generated by this tool are based on assumptions and projections that may not reflect future reality. They do not constitute personalized financial advice.'
              }
            </AlertDescription>
          </Alert>

          {/* Consent Checkbox */}
          <div className="flex items-start space-x-3 p-4 bg-blue-50 rounded-lg border border-blue-200">
            <Checkbox
              id="consent"
              checked={hasConsented}
              onCheckedChange={(checked) => setHasConsented(checked as boolean)}
              className="mt-1"
            />
            <label
              htmlFor="consent"
              className="text-sm font-medium text-blue-900 cursor-pointer leading-relaxed"
            >
              {isFrench 
                ? 'J\'ai lu, compris et j\'accepte ces conditions. Je reconnais que cette plateforme est un outil éducatif et que je dois consulter des professionnels qualifiés pour mes décisions financières importantes.'
                : 'I have read, understood and accept these conditions. I acknowledge that this platform is an educational tool and that I must consult qualified professionals for my important financial decisions.'
              }
            </label>
          </div>

          {/* Action Buttons */}
          <div className="flex gap-4 justify-end">
            <Button
              variant="outline"
              onClick={handleClose}
              className="px-6"
            >
              {isFrench ? 'Annuler' : 'Cancel'}
            </Button>
            <Button
              onClick={handleConsent}
              disabled={!hasConsented}
              className="px-6 bg-blue-600 hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed"
            >
              {isFrench ? 'J\'accepte et continuer' : 'I Accept and Continue'}
            </Button>
          </div>
        </div>
      </DialogContent>
    </Dialog>
  );
};

export default ConsentDialog;
